---
- name: Deploy Azure Infrastructure
  hosts: localhost
  connection: local
  collections:
    - azure.azcollection
  vars_files:
    - azure_vars.yml   

  tasks: 
    - name: Create Resource Group
      azure_rm_resourcegroup:
        name: "{{ resource_group }}"
        location: "{{ location }}"

    - name: Create Virtual Network
      azure_rm_virtualnetwork:
        resource_group: "{{ resource_group }}"
        name: "{{ vnet_name }}"
        address_prefixes: "10.0.0.0/16"

    - name: Create Subnet
      azure_rm_subnet:
        resource_group: "{{ resource_group }}"
        virtual_network_name: "{{ vnet_name }}"
        name: "{{ subnet_name }}"
        address_prefix: "10.0.1.0/24"

    - name: Create Network Security Group
      azure_rm_securitygroup:
        resource_group: "{{ resource_group }}"
        name: "{{ nsg_name }}"
        rules:
          - name: AllowSSH
            protocol: Tcp
            destination_port_range: 22
            access: Allow
            priority: 100
            direction: Inbound
            source_address_prefix: "{{ allowed_ssh_ip }}"
          - name: AllowHTTP
            protocol: Tcp
            destination_port_range: 80
            access: Allow
            priority: 200
            direction: Inbound
            source_address_prefix: "0.0.0.0/0"

    - name: Create Public IP
      azure_rm_publicipaddress:
        resource_group: "{{ resource_group }}"
        name: "{{ vm_name }}-pip"
        allocation_method: Static
        sku: Basic
      register: output_ip_address    

    - name: Create NIC
      azure_rm_networkinterface:
        resource_group: "{{ resource_group}}"
        name: "{{ vm_name }}-nic"
        virtual_network: "{{ vnet_name }}"
        subnet: "{{ subnet_name }}"
        security_group: "{{ nsg_name }}"
        ip_configurations:
          - name: "ipconfig1"
            public_ip_address_name: "{{ vm_name }}-pip"
            primary: true

    - name: Create VM
      azure_rm_virtualmachine:
        resource_group: "{{ resource_group }}"
        name: "{{ vm_name }}"
        vm_size: "{{ vm_size }}"
        managed_disk_type: Standard_LRS
        admin_username: "{{ admin_username }}"
        ssh_password_enabled: false
        ssh_public_keys:
          - path: "/home/{{ admin_username }}/.ssh/authorized_keys"
            key_data: "{{ lookup('file', ssh_public_key) }}"
        network_interfaces: "{{ vm_name }}-nic"
        image:
          offer: "0001-com-ubuntu-server-jammy"
          publisher: "canonical"
          sku: "22_04-lts-gen2"
          version: "latest"

    - name: Add VM to Inventory
      add_host:
        name: "{{ output_ip_address.state.ip_address }}"
        groups: vm_host
        ansible_user: "{{ admin_username }}"
        ansible_ssh_private_key_file: "{{ ssh_private_key }}"

- name: Configure VM
  hosts: vm_host
  become: yes
  roles:
    - configure_nginx        